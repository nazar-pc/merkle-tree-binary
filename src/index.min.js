/*
 0BSD
*/
(function(){function l(b,c){var d=b.length;var a=new Uint8Array(2*d);a.set(b);a.set(c,d);return a}function m(b,c){var d;if(b===c)return!0;if(b.length!==c.length)return!1;var a=0;for(d=b.length;a<d;++a){var f=a;var e=b[a];if(e!==c[f])return!1}return!0}function p(b,c){var d;if(1===b.length)return b[0];var a=[];var f=0;for(d=b.length;f<d;f+=2){var e=f;var g=b[f];e=b[e+1]||g;a.push(c(l(g,e)))}return p(a,c)}function q(b,c,d,a){var f;null==a&&(a=[]);if(1===b.length)return Uint8Array.from(a);var e=[];var g=
0;for(f=b.length;g<f;g+=2){var k=g;var n=b[g];k=b[k+1]||n;var h=d(l(n,k));e.push(h);m(n,c)?(a=a.concat(0,Array.from(k)),c=h):m(k,c)&&(a=a.concat(1,Array.from(n)),c=h)}return q(e,c,d,a)}function r(b,c,d,a){var f;if(m(b,d)&&0===c.length)return!0;var e=d.length;if(c.length%(e+1))return!1;e+=1;var g=0;for(f=c.length;0>e?g>f:g<f;g+=e){var k=g;var h=c.subarray(k+1,k+e);d=c[k]?a(l(h,d)):a(l(d,h))}return m(b,d)}function h(){return{get_root:p,get_proof:q,check_proof:r}}"function"===typeof define&&define.amd?
define(h):"object"===typeof exports?module.exports=h():this.merkle_tree_binary=h()}).call(this);